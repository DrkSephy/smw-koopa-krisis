Long-Term Goals
---------------

1. Create an overworld for level selection. [David/Jorge]

   - In progress.

2. Figure out how to traverse to different sub-rooms in a level using only one level change entity.
   i.e: There can be several doors in a level, and a player can enter them by pressing UP, and 
   travel back and forth through these maps. This feature is high priority, since it removes 
   linearity in the game. [Jonathan] 

   - COMPLETED. 

3. Possibly adding a "climb ladder" feature.


To-do (September 20, 2013)
--------------------------

1. Stalker AI [ Kevin ]
    
    - COMPLETED.

2. Ninji AI [ Kim ]

    - COMPLETED.

3. Ledge Detection / Simple walking AI / Graphics upgrade [ David ]

    - COMPLETED. 

To-do (September 27, 2013)
--------------------------

1. Heads Up Display (HUD) upgrade [ David ]

   - Replace current display of lives. Instead of displaying this.lives using a loop counter, replace
     the entire life counter with simply a Mario head x # lives.
   - Add a coin counter. Could be either a graphic of a coin, with the number of coins next to it. 
     Another approach could be to simply spell out "coins". (Not sure which method looks better).
   - Add an "Item" box to the center of the hud. Based on the weapon currently held by the player, 
     draw the corresponding power-up images.

     - In Progress.

2. Kill block [ Kim ]

    - Currently, there is no way to kill an entity that falls into a bottomless pit/lava. This
      Entity will be placed under lava/pits to kill any entity that makes contact with it. For
      reference, look at how to create a box using only weltmesiter (from levelexit.js). The
      collision properties will have to be changed to check against both A and B type entities,
      and in the collidesWith() method, just call this.kill() whenever an entity collides with the
      kill block.

    - COMPLETED. 

3. Thwomp AI [ Kim ]

    - The behavior of this enemy is located in lib/game/entities/thwomp.js.
      NOTE: The graphics for this enemy are -slightly- off. This is minor, will be fixed eventually.

    - COMPLETED.

4. Bullet Shooter [ Kevin ]

     - Behavior: The shooter itself will only fire if the player is a certain distance away from it.
       It will not shoot if the player is very close to it. The entity that is spawned from the 
       Bullet Shooter is the Bullet Bill entity.
       NOTE: The bullet bills go through all obstacles, and only collide with the player.

    - COMPLETED.

5. Bird (Needs a cooler name) [ Jorge ]

     - COMPLETED.

6. Jumping while moving forward AI [ Kevin ]

     - COMPLETED.

To-do (October 4th, 2013 -> October 18th, 2013)
-----------------------------------------------

1. Boo Enemy [ Jorge ]

    - Stalks player when the player is not facing the boo. If the player is facing the boo, the boo will not follow.

    - COMPLETED.

2. Hammer Brothers [ Kevin ]

    - Shoots hammers periodically. 

    - COMPLETED.

3. Fire Brothers [ Kim ]

    - Shoots a series of fireballs (spread out over time), then has a cool down, then begins to fire again. 
      The graphics file to use is firebros.png. (Note: size is 24 x 24).

4. Bony Beetle [ Kevin ]

    Graphics file: new_bony_beetle.png
    Note: Size of each frame is 30 x 30.

    Behavior
    --------
    1. Plays walking frame. 
    2. If the player is getting close to it, it will transition into its spiky state.
    3. In the spiky state, if the player jumps on it then they take damage.
    4. After a few seconds, reverts to walking. 
    5. If the player jumps on it when this enemy is not spiky, it will turn into bones and regenerate after
       a few seconds.

    - COMPLETED.

5. Skeleton [ Kim ] 

    Graphics file: skeleton.png
    Note: Size of each frame is 33 x 26. 

    Behavior
    --------
    1. Walks back and forth (it does not fall off ledges, see ledge detection code).
    2. If the player jumps on it, it turns into bones.
    3. After a few seconds, it regenerates to it's normal form.

6. Fixing multiple music bug [ Jonathan ]

    - With the addition of a new "door" entity, we have lost our functionality of having different songs for
      different levels. The reason for this is that the director.js's loadlevel() method is being 
      overridded by the loadLevel() method in door.js (I think). 






